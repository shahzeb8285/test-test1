{"version":3,"sources":["utils/callHelpers.ts","components/UnlockButton.tsx","hooks/useApprove.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","hooks/useAllowance.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","contexts/PastLotteryDataContext.tsx","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","participateForest","blackContract","participate","gasPrice","soushHarvest","soushHarvestBnb","claimForest","claimReward","UnlockButton","props","TranslateString","useI18n","useWallet","connect","reset","onPresentConnectModal","useWalletModal","onClick","color","useApprove","dispatch","useDispatch","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","useForestApprove","forestContract","useForest","Wrapper","styled","div","theme","colors","primary","ExpandableSectionButton","expanded","aria-label","role","bold","defaultProps","useLotteryAllowance","useState","allowance","setAllowance","useEffect","fetchAllowance","getAllowance","res","refreshInterval","setInterval","clearInterval","useForestAllowance","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","React","createContext","mostRecentLotteryNumber","historyError","historyData","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","getLotteryStatus","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","prevMillis","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","parseInt","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","size","Blurb","StyledHero","heroColor","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","src","alt","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","ticketsContract","useLotteryTicket","fetchBalance","getTotalClaim","claim","useWinningNumbers","winngNumbers","setWinningNumbers","fastRefresh","useRefresh","getWinningNumbers","rewards","useMatchingRewardLength","numbers","matchingNumbers","setMatchingNumbers","getMatchingRewardLength","matchedNumbaers","useTickets","lotteryNumber","tickets","setTickets","getTickets","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","map","index","emoji","Array","join","title","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","console","error","winnings","getBalanceNumber","toFixed","style","marginRight","fullWidth","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","height","width","WarningModal","ModalActions","CardActions","TicketCard","requestedApproval","setRequestedApproval","cakeBalance","useTokenBalance","getCakeAddress","ticketsLength","PurchaseWarningModal","onPresentApprove","BuyTicketModal","max","tokenName","onPresentBuy","handleApprove","toNumber","id","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","toLocaleString","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","getTotalRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","alignItems","justifyContent","fontWeight","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","secondary","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","marginLeft","href","LayoutWrapper","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","onChange","currentTarget","PastRoundCardError","p","message","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","getLotteryIssueIndex","previousLotteryNumber","getInitialLotteryIndex","Page","Divider","Provider"],"mappings":"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","file":"static/js/12.05b1b375.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const participateForest = async (blackContract, amount, account) => {\n  // console.log('amount', new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n  return blackContract.methods\n    .participate(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    // .participate(\"2\", 100)\n    .send({ from: account, gasPrice: '7000000000'  })\n    .on('transactionHash', (tx) => {\n      return tx\n    })\n}\n\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const claimForest = async (blackContract, account) => {\n  return blackContract.methods\n    .claimReward()\n    .send({ from: account})\n    .on('transactionHash', (tx) => {\n      return tx\n    })\n}\n","import React from 'react'\nimport { Button, useWalletModal, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      <Text color=\"black\">{TranslateString(292, 'Unlock Wallet')}</Text>\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery, useForest } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n\nexport const useForestApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const forestContract = useForest()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, forestContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, forestContract])\n\n  return { onApprove: handleApprove }\n}\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useForest, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n\nexport const useForestAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const forestContract = useForest()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, forestContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, forestContract])\n\n  return allowance\n}\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (account && lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [account, lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n  margin-top:40px;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"black\">\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text,Card } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\n\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.primary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #000;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background: ${({ theme }) => theme.colors.heroColor};\n\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n  padding-left:80px;\n  padding-right:80px;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title color=\"primary\">{TranslateString(999, 'The Privacy Pot')}</Title>\n          <Blurb>{TranslateString(999, 'Buy tickets with PRV')}</Blurb>\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n          <LotteryProgress />\n        </LeftWrapper>\n        <RightWrapper>\n\n        <img src='/images/ticket-bg.png' alt=\"place\"/>\n\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winngNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(999, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              PRV\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(999, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <img src=\"/images/ticket.png\" alt=\"ticket\" height=\"60\" width=\"60\"/>\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your PRV will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button fullWidth onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport { useLotteryApprove } from 'hooks/useApprove'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const { onApprove } = useLotteryApprove()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"PRV\" />)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button fullWidth disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(999, 'Approve PRV')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          fullWidth\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(999, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            {/* <TicketRound /> */}\n\n            <img src=\"/images/ticket.png\" alt=\"Pot\" height={80} width={80}/>\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(999, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem marginBottom=\"20px\">\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem marginBottom=\"20px\">\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem marginBottom=\"20px\">\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport PrizeGrid from '../PrizeGrid'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PancakeRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Total Privacy Pot:')}\n              </Text>\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} PRV</Heading>\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWallet()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <Card>\n        <CardBody>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <Title>\n                {account && lotteryHasDrawn\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                  : TranslateString(572, 'Latest Winning Numbers')}\n              </Title>\n              <br />\n            </StyledCardHeader>\n            <Row>\n              {winNumbers.map((number, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <TicketNumberBox key={index}>\n                  <CenteredText>{number}</CenteredText>\n                </TicketNumberBox>\n              ))}\n            </Row>\n            <RabbitRow>\n              <RabbitBox>\n                <CardImageFirst>\n                  {/* <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive /> */}\n                </CardImageFirst>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  {/* <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive /> */}\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  {/* <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive /> */}\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  {/* <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive /> */}\n                </CardImage>\n              </RabbitBox>\n            </RabbitRow>\n            <RabbitRowSmall>\n              <RabbitBoxSmall>\n                <CardImageFirst>\n                  {/* <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive /> */}\n                </CardImageFirst>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  {/* <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive /> */}\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  {/* <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive /> */}\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  {/* <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive /> */}\n                </CardImage>\n              </RabbitBoxSmall>\n            </RabbitRowSmall>\n            <Column>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber4}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber3}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber2}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n            </Column>\n            <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\n              {TranslateString(448, 'Export recent winning numbers')}\n            </Link>\n          </StyledCardContentInner>\n        </CardBody>\n      </Card>\n    </CardWrapper>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #2984ED;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #2984ED 0%, #82b3ed 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      {/* <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} /> */}\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(999, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          999,\n          'Spend PRV to buy tickets, contributing to the privacy pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWallet()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotterNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <Input\n            value={lotteryNumber}\n            type=\"number\"\n            isWarning={isError}\n            max={initialLotteryNumber}\n            onChange={handleChange}\n          />\n          <ButtonWrapper>\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\n              {TranslateString(999, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\n          {TranslateString(999, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} PRV`)}\n              Icon={PancakeRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@pancakeswap-libs/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#1FC7D4' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(999, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(999, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(999, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          {/* <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" /> */}\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (account && lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [account, lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}